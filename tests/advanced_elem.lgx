1 if True else 0
#expect:1

1 if False else 0
#expect:0

"a" if True else "b"
#expect:"a"

"a" if False else "b"
#expect:"b"

##################################

[x for x in range(5)]
#expect:[0, 1, 2, 3, 4]

[x for x in range(5) if x % 2 == 0]
#expect:[0, 2, 4]

[x*2 for x in range(3)]
#expect:[0, 2, 4]

[x for x in [1, 2, 3] if x > 1]
#expect:[2, 3]

#bug: AssertionError
#[x for x in "abc"]
##expect:["a", "b", "c"]

#bug: LogicsParseException
#[x.upper() for x in "abc"]
##expect:["A", "B", "C"]

##################################

#bug: AssertionError: assert '2' == '[1, 2]'
#[1, 2, 3, 4][:2]
##expect:[1, 2]

#bug: AssertionError: assert '3' == '[2, 3]'
#[1, 2, 3, 4][1:3]
##expect:[2, 3]

#bug: AssertionError
#"abcdef"[:3]
##expect:"abc"

#bug: AssertionError
#'abcdef'[2:]
##expect:'cdef'

#bug: AssertionError
#'abcdef'[::2]
##expect:'ace'

#bug: AssertionError
#[1, 2, 3, 4][::-1]
##expect:[4, 3, 2, 1]

##################################

[1, 2, 3][1]
#expect:2

"abc"[1]
#expect:"b"

(1, 2, 3)[2]
#expect:3

#bug: logics.parser.LogicsParseException: Line 1, column 1: Parse error, expecting 'Identifier', 'Number', 'String', 'not', '+', '-', '~', '(', '[', 'True', 'False', 'None', '$'
#{"a": 1, "b": 2}["b"]
##expect:2

#bug: logics.parser.LogicsParseException: Line 1, column 2: Parse error, expecting 'Identifier', 'Number', 'String', 'not', '+', '-', '~', '(', '[', 'True', 'False', 'None', '$'
#[{"a": 1}, {"b": 2}][1]["b"]
##expect:2

#bug: logics.parser.LogicsParseException
#{'key': 'value'}['key']
##expect:'value'

##################################

#bug:  AssertionError: assert '2' == '[1, 2]'
#[1, 2, 3, 4][:2]
##expect:[1, 2]

#bug: AssertionError...
#[1, 2, 3, 4][1:3]
##expect:[2, 3]

#bug: AssertionError...
#'abcdef'[:3]
##expect:'abc'

#bug: AssertionError...
#'abcdef'[2:]
##expect:'cdef'

#bug: AssertionError...
#'abcdef'[::2]
##expect:'ace'

#bug: AssertionError...
#[1, 2, 3, 4][::-1]
##expect:[4, 3, 2, 1]
